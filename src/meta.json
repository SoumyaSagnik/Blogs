[
  {
    "id": 1,
    "topic": "JS Array Functions",
    "type": "js",
    "desc": "Commonly used array functions in JavaScript.",
    "link": "/js-array-functions",
    "search": ["javascript"]
  },
  {
    "id": 2,
    "topic": "CSS Specificity",
    "type": "css",
    "desc": "Specifictity in CSS.",
    "link": "/css-specificity",
    "search": ["style"]
  },
  {
    "id": 3,
    "topic": "Git",
    "type": "git",
    "desc": "An overview of git and commonly used git commands.",
    "link": "/git",
    "search": ["github", "version control"]
  },
  {
    "id": 4,
    "topic": "Hoisting in JS with var",
    "type": "js",
    "desc": "Understand hoisting in JavaScript using var.",
    "link": "/js-hoisting",
    "search": ["javascript"]
  },
  {
    "id": 5,
    "topic": "Internal Working of JS Functions",
    "type": "js",
    "desc": "A brief overview of how JavaScript functions run behind the scenes.",
    "link": "/js-iw-functions",
    "search": ["javascript"]
  },
  {
    "id": 6,
    "topic": "window & this keyword",
    "type": "js",
    "desc": "Introduction to window and this keyword in JavaScript.",
    "link": "/js-windowAndthis",
    "search": ["javascript"]
  },
  {
    "id": 7,
    "topic": "undefined vs not defined in JS",
    "type": "js",
    "desc": "Understand the significane of undefined.",
    "link": "/js-undefinedVsNotDefined",
    "search": ["javascript"]
  },
  {
    "id": 8,
    "topic": "JS is a loosely typed language",
    "type": "js",
    "desc": "Understand what a loosely typed language is.",
    "link": "/js-loosely-typed",
    "search": ["javascript"]
  },
  {
    "id": 9,
    "topic": "Scope & Lexical Environment in JS",
    "type": "js",
    "desc": "Deep dive into scope chain and lexical environment in JavaScript.",
    "link": "/js-scope&le",
    "search": ["javascript"]
  },
  {
    "id": 10,
    "topic": "Hoisting in JS with let and const",
    "type": "js",
    "desc": "An overview of how hoisting works with let and const.",
    "link": "/js-hoisting-let&const",
    "search": ["javascript"]
  },
  {
    "id": 11,
    "topic": "Types of Errors in JS",
    "type": "js",
    "desc": "Common types of errors in JavaScript with examples.",
    "link": "/js-errors",
    "search": ["javascript"]
  },
  {
    "id": 12,
    "topic": "Block Scope & Shadowing in JS",
    "type": "js",
    "desc": "Deep dive into blocks, block scope and an overview of shadowing in JavaScript.",
    "link": "/js-block&shadowing",
    "search": ["javascript"]
  },
  {
    "id": 13,
    "topic": "Closures in JS",
    "type": "js",
    "desc": "Deep dive into closures in JavaScript.",
    "link": "/js-closures",
    "search": ["javascript"]
  },
  {
    "id": 14,
    "topic": "JS Interview Questions",
    "type": "js",
    "desc": "Output based interview qustions in JavaScript.",
    "link": "/js-interview",
    "search": ["javascript"]
  },
  {
    "id": 15,
    "topic": "Commonly used jargons in JS",
    "type": "js",
    "desc": "Brief explanation of some of the commonly used jargons in JavaScript with examples.",
    "link": "/js-jargons",
    "search": ["javascript"]
  },
  {
    "id": 16,
    "topic": "Callback Functions in JS",
    "type": "js",
    "desc": "Brief Explanation of callback functions in JS.",
    "link": "/js-callback",
    "search": ["javascript"]
  }
]
